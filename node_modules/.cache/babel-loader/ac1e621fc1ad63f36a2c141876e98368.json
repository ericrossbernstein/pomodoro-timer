{"ast":null,"code":"var _jsxFileName = \"/Users/Eric/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Title.js\";\nimport React from \"react\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction Title(props) {\n  const {\n    timerState,\n    onBreak,\n    breakDuration,\n    focusDuration\n  } = props;\n\n  if (!timerState.stop) {\n    if (onBreak) {\n      return /*#__PURE__*/React.createElement(\"h2\", {\n        \"data-testid\": \"session-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }\n      }, \"On Break for \", secondsToDuration(breakDuration), \" minutes\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"h2\", {\n        \"data-testid\": \"session-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, \"Focusing for \", secondsToDuration(focusDuration), \" minutes\");\n    }\n  } else {\n    return null;\n  }\n}\n\nexport default Title;","map":{"version":3,"sources":["/Users/Eric/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Title.js"],"names":["React","secondsToDuration","Title","props","timerState","onBreak","breakDuration","focusDuration","stop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,aAAvB;AAAsCC,IAAAA;AAAtC,MAAwDJ,KAA9D;;AACA,MAAI,CAACC,UAAU,CAACI,IAAhB,EAAsB;AACpB,QAAIH,OAAJ,EAAa;AACX,0BACE;AAAI,uBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACgBJ,iBAAiB,CAACK,aAAD,CADjC,aADF;AAKD,KAND,MAMO;AACL,0BACE;AAAI,uBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACgBL,iBAAiB,CAACM,aAAD,CADjC,aADF;AAKD;AACF,GAdD,MAcO;AACL,WAAO,IAAP;AACD;AACF;;AAED,eAAeL,KAAf","sourcesContent":["import React from \"react\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction Title(props) {\n  const { timerState, onBreak, breakDuration, focusDuration } = props;\n  if (!timerState.stop) {\n    if (onBreak) {\n      return (\n        <h2 data-testid=\"session-title\">\n          On Break for {secondsToDuration(breakDuration)} minutes\n        </h2>\n      );\n    } else {\n      return (\n        <h2 data-testid=\"session-title\">\n          Focusing for {secondsToDuration(focusDuration)} minutes\n        </h2>\n      );\n    }\n  } else {\n    return null;\n  }\n}\n\nexport default Title;\n"]},"metadata":{},"sourceType":"module"}